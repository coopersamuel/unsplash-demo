{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./config.js","webpack:///./src/actions/actionTypes.js","webpack:///./src/actions/actions.js","webpack:///./src/apiConfig/index.js","webpack:///./src/components/PhotoContainer/PhotoContainer.js","webpack:///./src/components/PhotoContainer/PhotoContainer.scss?b932","webpack:///./src/components/PhotoSelect/PhotoSelect.js","webpack:///./src/components/PhotoSelect/photoSelect.scss?8ec1","webpack:///./src/components/Slideshow/Slideshow.js","webpack:///./src/components/Slideshow/slideshow.scss?5a5a","webpack:///./src/index.js","webpack:///./src/middleware/asyncMiddleware.js","webpack:///./src/middleware/index.js","webpack:///./src/reducers/index.js","webpack:///./src/reducers/photos.js","webpack:///./src/reducers/playlist.js","webpack:///./src/reducers/selectPhotos.js","webpack:///./src/styles.scss?8f74","webpack:///./src/utils/spotify.js","webpack:///./src/utils/unsplash.js"],"names":["unsplashApiKeys","accessKey","secretKey","redirectURI","spotifyApiKeys","clientId","clientSecret","PROMISE","FETCH_SELECT_PHOTO","LOAD_SELECT_PHOTO","FETCH_PHOTOS","LOAD_PHOTOS","FETCH_PLAYLIST","LOAD_PLAYLIST","ActionTypes","fetchPhotos","UnsplashUtils","searchTerm","then","loadPhotos","photos","type","payload","fetchSelectPhoto","id","fetchSinglePhoto","loadSelectPhoto","photo","fetchPlaylist","SpotifyUtils","getPlaylist","playlistId","loadPlaylist","playlist","photoIds","moody","adventurous","chill","bright","playlistIds","PhotoContainer","props","state","typeSelected","generatePhotos","bind","handlePhotoSelect","handleHomeClick","setState","console","log","selectPhotos","React","Component","mapStateToProps","mapDispatchToProps","dispatch","PhotoSelect","backgroundImage","urls","regular","handleClick","Slideshow","currentPhotoIndex","paused","meta","songName","artist","album","incrementSlideshow","updateTrackMeta","slideshowInterval","setInterval","trackUpdateInterval","clearInterval","clearTimeout","prevProps","play","rawTrackMeta","getPlayerState","track_window","current_track","trackMeta","name","artists","length","prevState","pause","previousTrack","resume","nextTrack","App","middleware","asyncMiddleware","store","rootReducer","initWebPlayer","document","getElementById","actionTypes","actions","action","async","promise","value","next","asyncAction","redirectUri","accessToken","player","playerState","authorize","window","onSpotifyWebPlaybackSDKReady","token","Spotify","Player","getOAuthToken","cb","volume","addListener","message","error","device_id","connect","url","location","href","expirationTime","match","setTimeout","history","pushState","assign","fetch","headers","Authorization","response","ok","json","jsonResponse","items","map","item","track","uri","Error","spotifyUris","_options","method","body","JSON","stringify","uris","queryParam","results"],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".bundle.js\"\n \t}\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const unsplashApiKeys = {\n    accessKey: '5144e70c86707ac64a084fc09c9ffb3d370138599b8f2b0c8dca71ce50b6ef31',\n    secretKey: '3dce983c822547168f1e1f3f7646c860f56a3b37a43e9fa5604fc4fe92b03a7e',\n    redirectURI: 'urn:ietf:wg:oauth:2.0:oob'\n};\n\nconst spotifyApiKeys = {\n    clientId: 'ec4504f52f3a4d90aae01796a2a0d1d4',\n    clientSecret: 'eead0a60c41343d79b8d16f0d17d06d5',\n    redirectURI: 'https://coopersamuel.github.io/unsplash-demo/' // Change this later\n};\n\nexport { unsplashApiKeys, spotifyApiKeys };","/**\n *  Action Types\n */\n\nexport const PROMISE = 'PROMISE';\nexport const FETCH_SELECT_PHOTO = 'FETCH_SELECT_PHOTO';\nexport const LOAD_SELECT_PHOTO = 'LOAD_SELECT_PHOTO';\nexport const FETCH_PHOTOS = 'FETCH_PHOTOS';\nexport const LOAD_PHOTOS = 'LOAD_PHOTOS';\nexport const FETCH_PLAYLIST = 'FETCH_PLAYLIST';\nexport const LOAD_PLAYLIST = 'LOAD_PLAYLIST';","import * as ActionTypes from './actionTypes';\nimport { asyncAction } from '../middleware/asyncMiddleware';\nimport UnsplashUtils from '../utils/unsplash';\nimport SpotifyUtils from '../utils/spotify';\n\n/**\n *  Action Creators\n */\n\nexport const fetchPhotos = searchTerm => asyncAction(UnsplashUtils.fetchPhotos(searchTerm).then(loadPhotos));\n\nexport const loadPhotos = (photos) => {\n    return {\n        type: ActionTypes.LOAD_PHOTOS,\n        payload: photos\n    };\n}\n\nexport const fetchSelectPhoto = (id, type) => asyncAction(UnsplashUtils.fetchSinglePhoto(id).then(photo => loadSelectPhoto(photo, type)));\n\nexport const loadSelectPhoto = (photo, type) => {\n    return {\n        type: ActionTypes.LOAD_SELECT_PHOTO,\n        payload: {\n            type,\n            photo\n        }\n    };\n}\n\nexport const fetchPlaylist = playlistId => asyncAction(SpotifyUtils.getPlaylist(playlistId).then(loadPlaylist));\n\nexport const loadPlaylist = playlist => {\n    return {\n        type: ActionTypes.LOAD_PLAYLIST,\n        payload: playlist\n    };\n}","/**\n * This file holds the curated photos and playlists that this app uses\n * In an ideal world these would be chosen dynamically based on the users preferences,\n * but as of now, we'll take care of curating these\n */\n\n// These are the ids for the curated photos\nconst photoIds = {\n    moody: 'PDfe7H5GJR0',\n    adventurous: 'UniC8xhlzaE',\n    chill: 'VYApL4dcNn8',\n    bright: '3TmLV0fLzfU'\n};\n\n// These are ids for the curated playlists\nconst playlistIds = {\n    moody: '37i9dQZF1DX79Y9Kr2M2tM',\n    adventurous: '37i9dQZF1DWSXBu5naYCM9',\n    chill: '37i9dQZF1DWYzpSJHStHHx',\n    bright: '37i9dQZF1DWVu0D7Y8cYcs'\n};\n\nexport { photoIds, playlistIds };","import React from 'react';\nimport PhotoSelect from '../PhotoSelect/PhotoSelect';\nimport Slideshow from '../Slideshow/Slideshow';\nimport './PhotoContainer.scss';\n\nimport { photoIds, playlistIds } from '../../apiConfig';\nimport { map } from 'lodash';\nimport { fetchPhotos, fetchSelectPhoto, fetchPlaylist } from '../../actions/actions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nclass PhotoContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            typeSelected: '',\n        };\n\n        this.generatePhotos = this.generatePhotos.bind(this);\n        this.handlePhotoSelect = this.handlePhotoSelect.bind(this);\n        this.handleHomeClick = this.handleHomeClick.bind(this);\n    }\n\n    componentWillMount() {\n        this.generatePhotos();\n    }\n\n    generatePhotos() {\n        /**\n         * This function is VERY ugly, unfortunately right now there is no good way to grab four photos each with a different search term\n         * so four separate API calls will have to do for now\n         */\n\n        this.props.fetchSelectPhoto(photoIds.moody, 'moody');\n        this.props.fetchSelectPhoto(photoIds.adventurous, 'adventurous');\n        this.props.fetchSelectPhoto(photoIds.chill, 'chill');\n        this.props.fetchSelectPhoto(photoIds.bright, 'bright');\n    }\n\n    handlePhotoSelect(type) {\n        this.props.fetchPhotos(type);\n        this.props.fetchPlaylist(playlistIds[type]);\n        this.setState({ typeSelected: type });\n    }\n\n    handleHomeClick() {\n        console.log('something happened')\n        this.setState({ typeSelected: '' });\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid full-width-container\">\n                {!this.state.typeSelected && \n                    <PhotoSelect photos={this.props.selectPhotos} handleClick={this.handlePhotoSelect} />\n                    ||\n                    <Slideshow photos={this.props.photos} playlist={this.props.playlist} handleClick={this.handleHomeClick} />\n                }\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        selectPhotos: state.selectPhotos,\n        photos: state.photos,\n        playlist: state.playlist\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        fetchSelectPhoto,\n        fetchPhotos,\n        fetchPlaylist\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhotoContainer);","// extracted by mini-css-extract-plugin","import React from 'react';\nimport { map } from 'lodash';\nimport './photoSelect.scss';\n\nclass PhotoSelect extends React.Component {\n    render() {\n        return (\n            <div className=\"photos-container\">\n                {this.props.photos &&\n                    <div>\n                        {map(this.props.photos, photo => {\n                            return (\n                                <div \n                                    className=\"clickable-photo\" \n                                    key={photo.photo.id}\n                                    style={{ backgroundImage: `url(${photo.photo.urls.regular})` }} \n                                    onClick={() => this.props.handleClick(photo.type)}>\n                                </div>\n                            );\n                        })}\n                    </div>\n                }\n                <div className=\"instructions-container\">\n                    <div className=\"instructions\">\n                        Choose the photo that describes your current mood\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PhotoSelect;","// extracted by mini-css-extract-plugin","import React from 'react';\nimport './slideshow.scss';\nimport SpotifyUtils from '../../utils/spotify';\nimport { MdPlayArrow, MdPause, MdFastForward, MdFastRewind } from 'react-icons/lib/md/';\n\nclass Slideshow extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentPhotoIndex: 0,\n            paused: true,\n            meta: {\n                songName: '',\n                artist: '',\n                album: ''\n            }\n        };\n\n        this.incrementSlideshow = this.incrementSlideshow.bind(this);\n        this.updateTrackMeta = this.updateTrackMeta.bind(this);\n    }\n\n    componentDidMount() {\n        // Set an interval to increment the slideshow every four seconds\n        this.slideshowInterval = setInterval(() => this.incrementSlideshow(), 4000);\n        // Update the track meta every half second\n        this.trackUpdateInterval = setInterval(() => this.updateTrackMeta(), 500);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.slideshowInterval);\n        clearTimeout(this.trackUpdateInterval);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.playlist !== prevProps.playlist) {\n            // Once props.playlist is populated, begin the web playback\n            SpotifyUtils.play(this.props.playlist);\n            this.setState({ paused: false });\n        }\n    }\n\n    updateTrackMeta() {\n        let rawTrackMeta = SpotifyUtils.getPlayerState().track_window.current_track;\n        let trackMeta = {\n            songName: rawTrackMeta.name,\n            artist: rawTrackMeta.artists[0].name,\n            album: rawTrackMeta.album.name\n        };\n        \n        // Update the state if necessary\n        if (this.state.meta !== trackMeta) {\n            this.setState({ meta: trackMeta });\n        }\n    }\n\n    incrementSlideshow() {\n        if (this.state.currentPhotoIndex < this.props.photos.length - 1) {\n            this.setState(prevState => ({\n                currentPhotoIndex: prevState.currentPhotoIndex + 1\n            }));\n        } else {\n            // Reset to the beginning of the slideshow\n            this.setState({\n                currentPhotoIndex: 0\n            });\n        }\n    }\n\n    render() {\n        let photo = this.props.photos[this.state.currentPhotoIndex];\n\n        if (!photo) {\n            return <div></div>;\n        }\n\n        return (\n            <div className=\"slideshow-container\">\n                <div className=\"slideshow-photo\" style={{ backgroundImage: `url(${photo.urls.regular})` }}>\n                    <div className=\"row pt-4 justify-content-around playback-container\">\n                        <div className=\"col-4 align-self-center text-center app-title\" onClick={() => {\n                            SpotifyUtils.pause();\n                            this.props.handleClick();\n                        }}>Unsplash Moodboard</div>\n                        <div className=\"col-4 align-self-center text-center\">\n                            <div className=\"meta-container\">\n                                <div className=\"title\">{this.state.meta.songName}</div>\n                                <div>\n                                    <span>{this.state.meta.artist}</span>\n                                    <span> | </span>\n                                    <span>{this.state.meta.album}</span>\n                                </div>\n                            </div>\n                            <div className=\"controls-container\">\n                                <span className=\"controls\" onClick={() => {\n                                    SpotifyUtils.previousTrack();\n                                }}>\n                                    <MdFastRewind />\n                                </span>\n                                {this.state.paused &&\n                                    <span className=\"controls\" onClick={() => {\n                                        SpotifyUtils.resume();\n                                        this.setState({ paused: false });\n                                    }}>\n                                        <MdPlayArrow />\n                                    </span>\n                                    ||\n                                    <span className=\"controls\" onClick={() => {\n                                        SpotifyUtils.pause();\n                                        this.setState({ paused: true });\n                                    }}>\n                                        <MdPause />\n                                    </span>\n                                }\n                                <span className=\"controls\" onClick={() => {\n                                    SpotifyUtils.nextTrack();\n                                }}>\n                                    <MdFastForward />\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Slideshow;","// extracted by mini-css-extract-plugin","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { asyncMiddleware } from './middleware';\nimport SpotifyUtils from './utils/spotify';\nimport PhotoContainer from './components/PhotoContainer/PhotoContainer';\nimport rootReducer from './reducers';\nimport './styles.scss';\n\nconst App = () => {\n    let middleware = composeWithDevTools(applyMiddleware(asyncMiddleware));\n    let store = createStore(\n        rootReducer,\n        middleware\n    );\n\n    // Initialize the web player\n    SpotifyUtils.initWebPlayer();\n\n    return (\n        <Provider store={store}>\n            <div>\n                {/* <button className=\"btn btn-primary\" onClick={() => {\n                    SpotifyUtils.authorize();\n                }}>Authorize</button>\n                <button onClick={() => {\n                    SpotifyUtils.play([\"spotify:track:5qNNanYonpCwahfJGuFVRQ\", \"spotify:track:5ozIJrlaCAf3g8MMyot483\"]);\n                }}>Play</button>\n                <button onClick={() => {\n                    console.log(SpotifyUtils.getPlaylist('37i9dQZF1DWYzpSJHStHHx'));\n                }}>Playlist</button> */}\n                <PhotoContainer />\n            </div>\n        </Provider>\n    );\n}\n\nrender(<App />, document.getElementById(\"root\"));","import * as actionTypes from '../actions/actionTypes';\nimport * as actions from '../actions/actions'\n\nconst asyncMiddleware = store => next => action => {\n    // Run this for every action that requires async\n    if(action.async) {\n        action.promise\n        .then(value => {\n            store.dispatch(value);\n        });\n    } else {\n        return next(action);\n    }\n}\n\nexport const asyncAction = (promise) => ({\n    type: actionTypes.PROMISE,\n    async: true,\n    promise\n});\n\nexport default asyncMiddleware;","import asyncMiddleware from './asyncMiddleware';\n\nexport { asyncMiddleware };","import { combineReducers } from 'redux';\nimport photos from './photos';\nimport selectPhotos from './selectPhotos';\nimport playlist from './playlist';\n\nexport default combineReducers({\n    selectPhotos,\n    photos,\n    playlist\n});","import * as ActionTypes from '../actions/actionTypes';\n\nexport default (state = {}, action) => {\n    switch(action.type) {\n        case ActionTypes.LOAD_PHOTOS:\n            return action.payload;\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from '../actions/actionTypes';\n\nexport default (state = {}, action) => {\n    switch(action.type) {\n        case ActionTypes.LOAD_PLAYLIST:\n            return action.payload;\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from '../actions/actionTypes';\n\nexport default (state = [], action) => {\n    switch(action.type) {\n        case ActionTypes.LOAD_SELECT_PHOTO:\n            return {\n                ...state,\n                [action.payload.type]: {\n                    type: action.payload.type,\n                    photo: action.payload.photo\n                }\n            };\n\n        default:\n            return state;\n    }\n}","// extracted by mini-css-extract-plugin","import { spotifyApiKeys } from '../../config';\n\nconst clientId = spotifyApiKeys.clientId;\nconst clientSecret = spotifyApiKeys.clientSecret;\nconst redirectUri = spotifyApiKeys.redirectURI;\nlet accessToken;\nlet player;\nlet playerState;\n\nlet SpotifyUtils = {\n    initWebPlayer() {\n        SpotifyUtils.authorize();\n\n        window.onSpotifyWebPlaybackSDKReady = () => {\n            const token = accessToken;\n            player = new Spotify.Player({\n              name: 'Moodboard Player',\n              getOAuthToken: cb => { cb(token); },\n              volume: 0.5\n            });\n      \n            // Error handling\n            player.addListener('initialization_error', ({ message }) => { console.error(message); });\n            player.addListener('authentication_error', ({ message }) => { console.error(message); });\n            player.addListener('account_error', ({ message }) => { console.error(message); });\n            player.addListener('playback_error', ({ message }) => { console.error(message); });\n      \n            // Playback status updates\n            player.addListener('player_state_changed', state => { playerState = state; });\n      \n            // Ready\n            player.addListener('ready', ({ device_id }) => {\n              console.log('Ready with Device ID', device_id);\n            });\n      \n            // Not Ready\n            player.addListener('not_ready', ({ device_id }) => {\n              console.log('Device ID has gone offline', device_id);\n            });\n      \n            // Connect to the player!\n            player.connect();\n        };\n    },\n\n    authorize() {\n        let url = window.location.href;\n        let expirationTime;\n\n        if (accessToken) {\n            // If the user has already been authenticated, return the access token\n            return accessToken;\n        } else if (url.match(/access_token=([^&]*)/) && url.match(/expires_in=([^&]*)/)) {\n            // Pull out the accessToken from the URL\n            let match = url.match(/access_token=([^&]*)/);\n            accessToken = match[1];\n            // Pull out the expirationTime from the URL\n            match = url.match(/expires_in=([^&]*)/);\n            expirationTime = match[1];\n\n            // Set the accessToken to empty string when time is up\n            window.setTimeout(() => accessToken = '', expirationTime * 1000);\n            // Remove the accessToken in the URL so that we don't try to grab it again\n            window.history.pushState('Access Token', null, '/');\n        } else {\n            // Authenticate the user by redirecting to spotify\n            window.location.assign(`https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=streaming%20user-read-birthdate%20user-read-email%20user-read-private&redirect_uri=${redirectUri}`);                            \n        }\n    },\n\n    async getPlaylist(playlistId) {\n        SpotifyUtils.authorize();\n\n        try {\n            let response = await fetch(`https://api.spotify.com/v1/users/spotify/playlists/${playlistId}/tracks`, {\n                headers : {Authorization : `Bearer ${accessToken}`}\n            });\n\n            if (response.ok) {\n                let jsonResponse = await response.json();\n\n                if (jsonResponse.items) {\n                    return jsonResponse.items.map(item => {\n                        // return {\n                        //     id: item.track.id,\n                        //     title: item.track.name,\n                        //     artist: item.track.artists[0].name,\n                        //     album: item.track.album.name,\n                        //     uri: item.track.uri\n                        // };\n                        return item.track.uri;\n                    });\n                } else {\n                    return [];\n                }\n            }\n\n            throw new Error('Request failed.');\n        } catch (error) {\n            console.log(error);\n        }\n    },\n\n    play(spotifyUris) {\n        SpotifyUtils.authorize();\n\n        // Tell spotify to start playing on the Web Player\n        fetch(`https://api.spotify.com/v1/me/player/play?device_id=${player._options.id}`, {\n                method: 'PUT',\n                body: JSON.stringify({ uris: spotifyUris }),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${accessToken}`\n            },\n        });\n    },\n\n    getPlayerState() {\n        return playerState;\n    },\n\n    pause() {\n        player.pause();\n    },\n\n    resume() {\n        player.resume();\n    },\n\n    previousTrack() {\n        player.previousTrack();\n    },\n\n    nextTrack() {\n        player.nextTrack();\n    }\n}\n\nexport default SpotifyUtils;","import { unsplashApiKeys } from '../../config';\n\nconst accessKey = unsplashApiKeys.accessKey;\nconst secretKey = unsplashApiKeys.secretKey;\nconst redirectURI = unsplashApiKeys.redirectURI;\n\nlet UnsplashUtils = {\n    async fetchPhotos(queryParam) {\n        try {\n            let response = await fetch(`https://api.unsplash.com/search/photos?query=${queryParam}&per_page=50&orientation=landscape`, {\n                headers: { Authorization: `Client-ID ${accessKey}` }\n            });\n    \n            if (response.ok) {\n                let jsonResponse = await response.json();\n    \n                if (jsonResponse.results) {\n                    return jsonResponse.results;\n                }\n            }\n    \n            throw new Error('Photos request failed');\n        } catch (error) {\n            console.log(error);\n        }\n    },\n\n    async fetchSinglePhoto(id) {\n        try {\n            let response = await fetch(`https://api.unsplash.com/photos/${id}?w=675&h=375`, {\n                headers: { Authorization: `Client-ID ${accessKey}` }\n            });\n    \n            if (response.ok) {\n                let jsonResponse = await response.json();\n    \n                if (jsonResponse) {\n                    return jsonResponse;\n                }\n            } \n            \n            throw new Error('Select photos request failed');\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport default UnsplashUtils;"],"sourceRoot":""}